@if (Items != null)
{
    <div class="todo-list">
        @foreach (var toDoItem in Items)
        {
            <ToDoListItem @key="toDoItem.Id" Item="toDoItem" OnClickDone="OnClickDone" OnClickRemove="OnClickRemove" />
        }
    </div>
}

@code
{
    /// <summary>
    /// Gets or sets the collection of ToDo items to be displayed.
    /// </summary>
    [Parameter, EditorRequired]
    public IEnumerable<ToDoItem>? Items { get; set; }

    /// <summary>
    /// Gets or sets the callback that is invoked when the completion status of a ToDo item is changed, with the Id of the ToDo item as an argument.
    /// </summary>
    [Parameter]
    public EventCallback<int> OnClickDone { get; set; }

    /// <summary>
    /// Gets or sets the callback that is invoked when the delete button of a ToDo item is clicked, with the Id of the ToDo item as an argument.
    /// </summary>
    [Parameter]
    public EventCallback<int> OnClickRemove { get; set; }
}