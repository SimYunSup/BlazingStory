@using System.Text.Json

@implements IDisposable

<div class="actions-panel">

    <div class="actions-panel-scroll-window">
        @foreach (var log in this._ActionLogs ?? Enumerable.Empty<ComponentActionLog>())
        {
            <ActionsPanelLogLine @key="log.Id" Repeat="@log.Repeat" Name="@log.Name" Value="@log.ArgsJsonElement" />
        }
    </div>

    <CornerButton OnClick="OnClickClear">
        Clear
    </CornerButton>
</div>

@code
{
    [Parameter]
    public Story? Story { get; set; }

    [CascadingParameter]
    public required CanvasPageContext CanvasPageContext { get; init; }

    private ComponentActionLogs? _ActionLogs;

    protected override void OnInitialized()
    {
        this._ActionLogs = this.CanvasPageContext.GetRequiredItem<ComponentActionLogs>();
        this._ActionLogs.Updated += ActionLogs_Updated;
    }

    private void ActionLogs_Updated(object? sender, EventArgs e)
    {
        this.StateHasChanged();
    }

    private void OnClickClear()
    {
        this._ActionLogs?.Clear();
    }

    public void Dispose()
    {
        if (this._ActionLogs != null) this._ActionLogs.Updated -= ActionLogs_Updated;
    }
}