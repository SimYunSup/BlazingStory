@inherits ParameterControllerBase

@if (Parameter.Control is ControlType.Select)
{
    <Select Value="this.ValueString" Items="this._EnumValues" OnChange="OnChange" />
}
else
{
    <RadioGroup Name="@Key" Value="this.ValueString" Items="this._EnumValues" OnChange="OnChange" />
}

@code
{
    private string[] _EnumValues = Array.Empty<string>();

    private string ValueString => this.Value?.ToString() ?? "(null)";

    protected override void OnInitialized()
    {
        var (isNullable, _, enumType, _) = this.Parameter.TypeStructure;
        var enumValues = Enum.GetValues(enumType).Cast<object>().Select(e => e.ToString() ?? "").ToArray();
        this._EnumValues = isNullable ? enumValues.Prepend("(null)").ToArray() : enumValues;
    }

    private async Task OnChange(ChangeEventArgs arg)
    {
        var valueString = arg.Value?.ToString();
        if (string.IsNullOrEmpty(valueString) || valueString == "(null)")
        {
            if (this.Parameter.TypeStructure.IsNullable)
            {
                await OnInputAsync(null);
            }
        }
        else if (Enum.TryParse(this.Parameter.TypeStructure.PrimaryType, valueString, out var enumValue))
        {
            await this.OnInputAsync(enumValue);
        }
    }
}
