@using BlazingStory.Internals.Pages.Canvas.Controls.ParameterControllers.Controllers

@{
    var primaryType = this.Parameter.TypeStructure.PrimaryType;
}
@if (primaryType == typeof(string))
{
    <TextParameterController Key="@Key" Parameter="Parameter" Value="Value" OnInput="OnInput" />
}
else if (primaryType == typeof(bool))
{
    <BoolParameterController Key="@Key" Parameter="Parameter" Value="Value" OnInput="OnInput" />
}
else if (TypeUtility.IsNumericType(primaryType))
{
    <NumberParameterController Key="@Key" Parameter="Parameter" Value="Value" OnInput="OnInput" />
}
else if (primaryType.IsEnum == true)
{
    <EnumParameterController Key="@Key" Parameter="Parameter" Value="Value" OnInput="OnInput" />
}
else if (RenderFragmentKit.IsRenderFragment(Parameter.Type))
{
    <RenderFragmentParameterController Key="@Key" Parameter="Parameter" Value="Value" OnInput="OnInput" />
}
else
{
    <span>@(Value?.ToString() ?? "-")</span>
}

@code
{
    [Parameter, EditorRequired]
    public required string Key { get; set; }

    [Parameter, EditorRequired]
    public required ComponentParameter Parameter { get; set; }

    [Parameter, EditorRequired]
    public object? Value { get; set; }

    [Parameter]
    public EventCallback<ParameterInputEventArgs> OnInput { get; set; }
}