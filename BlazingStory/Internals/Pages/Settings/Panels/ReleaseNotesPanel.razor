@using System.Reflection;
@using BlazingStory.Internals.Types;
@inject HttpClient HttpClient

<header>Blazing Story @this._VersionText - @this._BuildTimestampAttrib?.BuildMonthText</header>

<section>
    @foreach (var releaseNoteSection in this._ReleaseNoteSections)
    {
        <h3>@releaseNoteSection.VersionTitle</h3>
        <ul>
            @foreach (var changeLog in releaseNoteSection.ChangeLogs)
            {
                <li>@changeLog</li>
            }
        </ul>
    }
</section>

@code
{
    private string _VersionText = "";

    private BuildTimestampAttribute? _BuildTimestampAttrib;

    private record ReleaseNoteSection(string VersionTitle, IEnumerable<string> ChangeLogs);

    private IEnumerable<ReleaseNoteSection> _ReleaseNoteSections = Enumerable.Empty<ReleaseNoteSection>();

    protected override async Task OnInitializedAsync()
    {
        this._VersionText = this.GetType().Assembly.GetFormattedVersionText();
        this._BuildTimestampAttrib = this.GetType().Assembly.GetCustomAttribute<BuildTimestampAttribute>();

        var releaseNotesText = await this.HttpClient.GetStringAsync($"./_content/BlazingStory/RELEASE-NOTES.txt?v={VersionUtility.GetVersionText()}");

        var releaseNotesLines = releaseNotesText
            .Split("\n")
            .Select(line => line.Trim('\r'))
            .Where(line => !string.IsNullOrWhiteSpace(line))
            .Append("v.0.0.0");

        var releaseNoteSections = new List<ReleaseNoteSection>();
        var currentVersion = "";
        var currentChangeLogs = new List<string>();
        foreach (var line in releaseNotesLines)
        {
            if (line.StartsWith("v."))
            {
                if (currentVersion != null)
                {
                    releaseNoteSections.Add(new(currentVersion, currentChangeLogs));
                    currentVersion = line;
                    currentChangeLogs = new();
                }
            }
            else
            {
                currentChangeLogs.Add(line.TrimStart('-', ' '));
            }
        }

        this._ReleaseNoteSections = releaseNoteSections;
    }
}