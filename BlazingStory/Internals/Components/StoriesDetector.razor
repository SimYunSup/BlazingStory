@using System.Reflection;

<div style="display:none;">

    @foreach (var storyContainer in this._StoryContainers)
    {
        <CascadingValue @key="storyContainer.Title" Value="storyContainer">
            <DynamicComponent Type="storyContainer.ComponentType" />
        </CascadingValue>
    }

</div>

@code {
    [Parameter, EditorRequired]
    public IEnumerable<Assembly>? Assemblies { get; set; }

    [Parameter, EditorRequired]
    public StoriesStore? StoriesStore { get; set; }

    private IEnumerable<StoryContainer> _StoryContainers = Enumerable.Empty<StoryContainer>();

    protected override void OnInitialized()
    {
        if (this.StoriesStore == null) throw new InvalidOperationException("The StoriesStore parameter is required.");

        var detector = new StoryContainerTypesDetector();
        this._StoryContainers = detector.DetectContainers(this.Assemblies);
        foreach (var storyContainer in this._StoryContainers)
        {
            this.StoriesStore.RegisterStoryContainer(storyContainer);
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        //if (firstRender)
        //{
        //    this.StoriesStore.SetStoryDataSet(this.probingStoryContext.StoryDataSet);
        //}
    }
}
