<nav class="sidebar stack vertical gap">

    <div class="sidebar-header">
        <span class="sidebar-header-title">
            @BlazingStoryApp.Title
        </span>
        <IconButton Icon="SvgIconType.Gear" />
    </div>

    <div class="search-field">
        <input type="text" placeholder="@this.SearchBoxPlaceHolder" required autocomplete="off" @onfocus="OnFocusSearchBox" @onblur="OnBlurSearchBox" />
        <SvgIcon Type="SvgIconType.Find" Class="find-icon" /> 
        <KeyMap Text="/" Class="shortcut-keymap"/>
    </div>

    <div class="explorer-menu">
        <NavigationTree Item="_NavigationRoot" SubHeading="true"/>
    </div>

</nav>

@code {
    [CascadingParameter]
    public StoriesStore? StoriesStore { get; set; }

    [CascadingParameter]
    public QueryRouteData? RouteData { get; set; }

    private readonly NavigationTreeBuilder _NavigationTreeBuilder = new();

    private NavigationTreeItem _NavigationRoot = new();

    private bool _SearchBoxHasFocus = false;

    private string SearchBoxPlaceHolder => this._SearchBoxHasFocus ? "Type to find..." : "Find components";

    protected override void OnInitialized()
    {
        if (this.StoriesStore == null) throw new InvalidOperationException("The StoriesStore cascading parameter was null.");
        if (this.RouteData == null) throw new InvalidOperationException("The RouteData cascading parameter was null.");

        var expandedNavigationPath = this.RouteData.RouteToStoryOrDocs ? this.RouteData.Parameter : null;
        _NavigationRoot = _NavigationTreeBuilder.Build(this.StoriesStore.StoryContainers, expandedNavigationPath);
    }

    private void OnFocusSearchBox() => _SearchBoxHasFocus = true;

    private void OnBlurSearchBox() => _SearchBoxHasFocus = false;
}
