@using System.Diagnostics.CodeAnalysis;
@typeparam TComponent where TComponent: notnull
@attribute [CascadingTypeParameter(nameof(TComponent))]

<div class="display:none;">
    <CascadingValue Value="this._StoryContext">
        @Arguments
    </CascadingValue>
</div>

@code
{
    [CascadingParameter]
    internal IServiceProvider Services { get; init; } = default!;

    [CascadingParameter]
    internal StoriesStore StoriesStore { get; init; } = default!;

    [CascadingParameter]
    internal StoryContainer? StoryContainer { get; set; }

    [CascadingParameter]
    internal StoriesRazorDescriptor StoriesRazorDescriptor { get; init; } = default!;

    [CascadingParameter]
    internal IEnumerable<ComponentParameter>? ComponentParameters { get; set; }

    [Parameter, EditorRequired]
    public string Name { get; set; } = "";

    [Parameter]
    public RenderFragment? Arguments { get; set; }

    [Parameter, EditorRequired]
    public RenderFragment<StoryContext>? Template { get; set; }

    private StoryContext? _StoryContext;

    protected override void OnInitialized()
    {
        if (this.Template == null) throw new InvalidOperationException($"The Template parameter is required.");

        var xmlDocComment = this.Services.GetRequiredService<IXmlDocComment>();
        this._StoryContext = new(this.ComponentParameters ?? ParameterExtractor.GetParametersFromComponentType(typeof(TComponent), xmlDocComment));

        if (this.StoryContainer == null)
        {
            this.StoryContainer = new StoryContainer(typeof(TComponent), this.StoriesRazorDescriptor, this.Services);
            this.StoriesStore.RegisterStoryContainer(this.StoryContainer);
        }
        this.StoryContainer.RegisterStory(this.Name, this._StoryContext, this.Template);
    }
}
